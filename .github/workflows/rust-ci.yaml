name: Rust CI

run-name: ðŸš€ ${{ github.workflow }}(${{ github.run_number }}) workflow deployed by @${{ github.actor }} on ${{ github.ref_name }} with event ${{ github.event_name }}

on:
  # pull_request:
  #   branches: [main]
  #   paths: ['*/src/**', '*/Cargo.lock', '*/Cargo.toml']
  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: Pick a project
        required: true
        default: 'hello-world'
        options:
          - 'hello-world'
          - 'guessing-game'
          - 'rust-axum-intro'

jobs:
  check:
    name: Cargo check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.project }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        id: cargo-check
        with:
          command: check

  test:
    name: Cargo test
    needs: [check]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.project }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    needs: [check, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.project }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    needs: [check, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.project }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
